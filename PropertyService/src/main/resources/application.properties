
spring.application.name=Property-Service
spring.datasource.url=jdbc:mysql://localhost:3306/propertydatabase
spring.datasource.username=root
spring.datasource.password=root

server.port=8083
# JWT
keycloak.resource-id=${RESOURCE_ID}
keycloak.jwt.principle-attribute=${PRINCIPLE_ATTRIBUTE}
# Keycloak and oauth2 configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/RealEstateAuth
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# show sql commands
spring.jpa.show-sql=false
# show sql queries
spring.jpa.properties.hibernate.format_sql=false
# ddl (create, alter, truncate)
spring.jpa.generate-ddl=true
spring.jpa.open-in-view=true

spring.jpa.hibernate.ddl-auto=none

# Error tracing
server.error.include-message=always
server.error.include-stacktrace=always

# Rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Property Elasticsearch
rabbitmq.exchange-name = property_added_exchange
rabbitmq.property-queue.propertyQueueName = property_added_queue
rabbitmq.property-queue.routingPropertyQueueKeyName = property_added_routing_key


#Ownership
rabbitmq.owner-ship-queue.owner-ship-queue-name=owner_ship_queue
rabbitmq.owner-ship-queue.routing-owner-ship-queue-key-name=owner_ship_routing_key



